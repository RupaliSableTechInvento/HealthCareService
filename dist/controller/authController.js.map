{"version":3,"sources":["../../src/controller/authController.js"],"names":["usersModel","require","tokenModel","jwt","env","tradeModel","encode","hashCode","express","app","authController","login","req","res","next","body","password","value","credential","global","email","findOne","err","user","json","console","log","d","Date","v","setMinutes","getMinutes","token1","sign","first_name","last_name","expiry","App_key","token","currentTime","token2","isActive","userActiveTime","findOneAndUpdate","$and","$set","data","isError","create","id","_id","getActiveUser","find","emailObj","length","index","push","$in","register","account_created","save","logout","decoded","verify","headers","success","module","exports"],"mappings":"AAAA,IAAIA,aAAYC,QAAQ,wBAAR,CAAhB;AACA,IAAIC,aAAYD,QAAQ,wBAAR,CAAhB;AACA,IAAIE,MAAKF,QAAQ,cAAR,CAAT;AACA,IAAIG,MAAKH,QAAQ,QAAR,CAAT;AACA,IAAII,aAAYJ,QAAQ,sBAAR,CAAhB;AACA,IAAIK,SAASL,QAAQ,UAAR,EAAoBM,QAAjC;;AAEA,IAAIC,UAASP,QAAQ,SAAR,CAAb;AACA,MAAMQ,MAAMD,SAAZ;;AAEA;AACA;;AAEA,MAAME,iBAAiB;AACrBC,SAAO,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACzBF,QAAIG,IAAJ,CAASC,QAAT,GAAoBV,SAASW,KAAT,CAAeL,IAAIG,IAAJ,CAASC,QAAxB,CAApB;AACA,UAAME,aAAaN,IAAIG,IAAvB;AACAI,WAAOC,KAAP,GAAeF,WAAWE,KAA1B;AACApB,eAAWqB,OAAX,CAAmB;AACjBD,aAAOF,WAAWE,KADD;AAEjBJ,gBAAUE,WAAWF;AAFJ,KAAnB,EAGG,CAACM,GAAD,EAAMC,IAAN,KAAe;AAChB,UAAID,GAAJ,EAAST,IAAIW,IAAJ,CAASF,GAAT;AACT,UAAIC,SAAS,IAAb,EAAmB;AACjBE,gBAAQC,GAAR,CAAY,QAAZ,EAAsBH,IAAtB;AACA,YAAII,IAAI,IAAIC,IAAJ,EAAR;AACA,YAAIC,IAAI,IAAID,IAAJ,EAAR;AACAC,UAAEC,UAAF,CAAaH,EAAEI,UAAF,KAAiB,EAA9B;AACA,cAAMC,SAAS7B,IAAI8B,IAAJ,CAAS;AACtBb,iBAAOG,KAAKH,KADU;AAEtBc,sBAAYX,KAAKW,UAFK;AAGtBC,qBAAWZ,KAAKY,SAHM;AAItBC,kBAAQP;AAJc,SAAT,EAKZzB,IAAIiC,OALQ,CAAf;AAMA,YAAIC,QAAQ,IAAIpC,UAAJ,EAAZ;AACAuB,gBAAQC,GAAR,CAAYH,KAAKH,KAAjB;AACA,YAAImB,cAAc,IAAIX,IAAJ,EAAlB;AACA,YAAIY,SAAS;AACX,mBAASR,MADE;AAEXZ,iBAAOG,KAAKH,KAFD;AAGXqB,oBAAU,QAHC;AAIXL,kBAAQP,CAJG;AAKXa,0BAAgBH;AALL,SAAb;AAOArC,mBAAWyC,gBAAX,CAA4B;AAC1BC,gBAAM,CAAC;AACLxB,mBAAOG,KAAKH;AADP,WAAD,EAEH;AACDqB,sBAAU;AADT,WAFG;AADoB,SAA5B,EAMG;AACDI,gBAAM;AACJJ,sBAAU;AADN;AADL,SANH,EAUG,CAACnB,GAAD,EAAMwB,IAAN,KAAe;AAChB,cAAIxB,GAAJ,EAAS,OAAOT,IAAIW,IAAJ,CAAS;AACvBuB,qBAAS,IADc;AAEvBD,kBAAMxB;AAFiB,WAAT,CAAP,CAAT,KAIK;AACHpB,uBAAW8C,MAAX,CAAkBR,MAAlB,EAA0B,UAASlB,GAAT,EAAcgB,KAAd,EAAqB;AAC7C,kBAAIhB,GAAJ,EAAS,OAAOT,IAAIW,IAAJ,CAASF,GAAT,CAAP;AACTT,kBAAIW,IAAJ,CAAS;AACPuB,yBAAS,KADF;AAEPD,sBAAMd,MAFC;AAGPT,sBAAM;AACJW,8BAAYX,KAAKW,UADb;AAEJC,6BAAWZ,KAAKY,SAFZ;AAGJc,sBAAI1B,KAAK2B;AAHL;AAHC,eAAT;AASD,aAXD;AAYD;AACF,SA7BD;AA8BD,OAnDD,MAmDO;AACLrC,YAAIW,IAAJ,CAAS;AACPuB,mBAAS,IADF;AAEPD,gBAAM;AAFC,SAAT;AAID;AACF,KA9DD;AA+DD,GApEoB;;AAsErBK,iBAAe,OAAMvC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,KAAyB;AACtC,UAAMZ,WAAWkD,IAAX,CAAgB;AACpBX,gBAAU;AADU,KAAhB,EAEH,CAACnB,GAAD,EAAMpB,UAAN,KAAqB;AACtB,UAAIoB,GAAJ,EAAS,OAAOT,IAAIW,IAAJ,CAAS;AACvBuB,iBAAS,IADc;AAEvB7C,oBAAYoB;AAFW,OAAT,CAAP,CAAT,KAIK;AACH,YAAI+B,WAAW,EAAf;AACA5B,gBAAQC,GAAR,CAAY,oBAAZ,EAAkCxB,WAAWoD,MAA7C;AACA,aAAK,IAAIC,QAAQ,CAAjB,EAAoBA,QAAQrD,WAAWoD,MAAvC,EAA+CC,OAA/C,EAAwD;AACtDF,mBAASG,IAAT,CAActD,WAAWqD,KAAX,EAAkBnC,KAAhC;AACD;AACDK,gBAAQC,GAAR,CAAY,oBAAZ,EAAkC2B,QAAlC;;AAEArD,mBAAWoD,IAAX,CAAgB;AACd,mBAAS;AACPK,iBAAKJ;AADE;AADK,SAAhB,EAIG,CAAC/B,GAAD,EAAMC,IAAN,KAAe;AAChB,cAAID,GAAJ,EAAS,OAAOT,IAAIW,IAAJ,CAAS;AACvBuB,qBAAS,IADc;AAEvBxB,kBAAMD;AAFiB,WAAT,CAAP,CAAT,KAIK;AACH,mBAAOT,IAAIW,IAAJ,CAAS;AACduB,uBAAS,KADK;AAEd7C,0BAAYA,UAFE;AAGdqB,oBAAMA;AAHQ,aAAT,CAAP;AAKD;AACF,SAhBD;AAiBD;AACF,KAjCK,CAAN;AAkCD,GAzGoB;;AA2GrBmC,YAAU,CAAC9C,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC5BW,YAAQC,GAAR,CAAY,uBAAZ,EAAqCd,IAAIG,IAAzC;AACA,QAAI4C,kBAAkB,IAAI/B,IAAJ,EAAtB;AACA,QAAIhB,IAAIG,IAAJ,CAASC,QAAT,IAAqB,EAArB,IAA2BJ,IAAIG,IAAJ,CAASC,QAAT,CAAkBsC,MAAlB,GAA2B,CAA1D,EAA6D;AAC3D1C,UAAIG,IAAJ,CAASC,QAAT,GAAoBV,SAASW,KAAT,CAAeL,IAAIG,IAAJ,CAASC,QAAxB,CAApB;AACA,UAAIO,OAAO,IAAIvB,UAAJ,CAAeY,IAAIG,IAAnB,CAAX;AACAH,UAAIG,IAAJ,CAAS4C,eAAT,GAA2BA,eAA3B;;AAEAlC,cAAQC,GAAR,CAAY,oBAAZ,EAAkCiC,eAAlC;AACApC,WAAKqC,IAAL,CAAUhD,IAAIG,IAAd,EAAoB,UAASO,GAAT,EAAcC,IAAd,EAAoB;AACtC,YAAID,GAAJ,EAAS,OAAOT,IAAIW,IAAJ,CAASF,GAAT,CAAP;AACTT,YAAIW,IAAJ,CAASD,IAAT;AACD,OAHD;AAID,KAVD,MAUO;AACLV,UAAIW,IAAJ,CAAS,+BAAT;AACD;AACF,GA3HoB;AA4HrBqC,UAAQ,CAACjD,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC1B,QAAIgD,UAAU3D,IAAI4D,MAAJ,CAAWnD,IAAIoD,OAAJ,CAAY,eAAZ,CAAX,EAAyC5D,IAAIiC,OAA7C,CAAd;AACAnC,eAAWyC,gBAAX,CAA4B;AAC1BC,YAAM,CAAC;AACL,iBAASkB,QAAQ1C;AADZ,OAAD,EAEH;AACD,oBAAY;AADX,OAFG,EAIH;AACD,iBAASR,IAAIoD,OAAJ,CAAY,eAAZ;AADR,OAJG;AADoB,KAA5B,EAQG;AACDnB,YAAM;AACJ,oBAAY,UADR;AAEJ,4BAAoB,IAAIjB,IAAJ;AAFhB;AADL,KARH,EAaG,CAACN,GAAD,EAAMwB,IAAN,KAAe;AAChB,UAAIxB,GAAJ,EAAS;AACPT,YAAIW,IAAJ,CAAS;AACPyC,mBAAS,KADF;AAEPnB,gBAAMxB;AAFC,SAAT;AAID,OALD,MAKO;AACLT,YAAIW,IAAJ,CAAS;AACPyC,mBAAS,IADF;AAEPnB,gBAAMA;AAFC,SAAT;AAID;AACF,KAzBD;AA0BD;AAxJoB,CAAvB;;AA2JAoB,OAAOC,OAAP,GAAezD,cAAf","file":"authController.js","sourcesContent":["var usersModel= require('./../models/usersModel');\r\nvar tokenModel= require('./../models/tokenModel');\r\nvar jwt= require('jsonwebtoken');\r\nvar env =require(\"../env\");\r\nvar tradeModel= require('../models/postatrade');\r\nvar encode = require('hashcode').hashCode;\r\n\r\nvar express =require('express');\r\nconst app = express();\r\n\r\n// var http = require('http')(9004);\r\n// global = {};\r\n\r\nconst authController = {\r\n  login: (req, res, next) => {\r\n    req.body.password = encode().value(req.body.password);\r\n    const credential = req.body;\r\n    global.email = credential.email;\r\n    usersModel.findOne({\r\n      email: credential.email,\r\n      password: credential.password\r\n    }, (err, user) => {\r\n      if (err) res.json(err);\r\n      if (user !== null) {\r\n        console.log(\"User=>\", user)\r\n        var d = new Date();\r\n        var v = new Date();\r\n        v.setMinutes(d.getMinutes() + 10);\r\n        const token1 = jwt.sign({\r\n          email: user.email,\r\n          first_name: user.first_name,\r\n          last_name: user.last_name,\r\n          expiry: v\r\n        }, env.App_key);\r\n        let token = new tokenModel();\r\n        console.log(user.email);\r\n        var currentTime = new Date();\r\n        var token2 = {\r\n          'token': token1,\r\n          email: user.email,\r\n          isActive: \"active\",\r\n          expiry: v,\r\n          userActiveTime: currentTime\r\n        };\r\n        tokenModel.findOneAndUpdate({\r\n          $and: [{\r\n            email: user.email\r\n          }, {\r\n            isActive: \"active\"\r\n          }]\r\n        }, {\r\n          $set: {\r\n            isActive: \"inactive\"\r\n          }\r\n        }, (err, data) => {\r\n          if (err) return res.json({\r\n            isError: true,\r\n            data: err\r\n          });\r\n          else {\r\n            tokenModel.create(token2, function(err, token) {\r\n              if (err) return res.json(err);\r\n              res.json({\r\n                isError: false,\r\n                data: token1,\r\n                user: {\r\n                  first_name: user.first_name,\r\n                  last_name: user.last_name,\r\n                  id: user._id\r\n                }\r\n              });\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        res.json({\r\n          isError: true,\r\n          data: \"email or password incorrect !\"\r\n        })\r\n      }\r\n    });\r\n  },\r\n\r\n  getActiveUser: async(req, res, next) => {\r\n    await tokenModel.find({\r\n      isActive: \"active\"\r\n    }, (err, tokenModel) => {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        tokenModel: err\r\n      });\r\n      else {\r\n        var emailObj = [];\r\n        console.log(\"trade model result\", tokenModel.length);\r\n        for (let index = 0; index < tokenModel.length; index++) {\r\n          emailObj.push(tokenModel[index].email);\r\n        }\r\n        console.log(\"active user email \", emailObj);\r\n\r\n        usersModel.find({\r\n          'email': {\r\n            $in: emailObj\r\n          }\r\n        }, (err, user) => {\r\n          if (err) return res.json({\r\n            isError: true,\r\n            user: err\r\n          });\r\n          else {\r\n            return res.json({\r\n              isError: false,\r\n              tokenModel: tokenModel,\r\n              user: user\r\n            });\r\n          }\r\n        });\r\n      }\r\n    })\r\n  },\r\n\r\n  register: (req, res, next) => {\r\n    console.log(\"req.body for register\", req.body)\r\n    var account_created = new Date();\r\n    if (req.body.password != \"\" && req.body.password.length > 6) {\r\n      req.body.password = encode().value(req.body.password);\r\n      let user = new usersModel(req.body);\r\n      req.body.account_created = account_created;\r\n\r\n      console.log(\"Account Created==>\", account_created);\r\n      user.save(req.body, function(err, user) {\r\n        if (err) return res.json(err);\r\n        res.json(user)\r\n      })\r\n    } else {\r\n      res.json(\"Please provide valid password\");\r\n    }\r\n  },\r\n  logout: (req, res, next) => {\r\n    var decoded = jwt.verify(req.headers['authorization'], env.App_key);\r\n    tokenModel.findOneAndUpdate({\r\n      $and: [{\r\n        'email': decoded.email\r\n      }, {\r\n        'isActive': 'active'\r\n      }, {\r\n        'token': req.headers['authorization']\r\n      }]\r\n    }, {\r\n      $set: {\r\n        'isActive': 'inactive',\r\n        'userInactiveTime': new Date()\r\n      }\r\n    }, (err, data) => {\r\n      if (err) {\r\n        res.json({\r\n          success: false,\r\n          data: err\r\n        });\r\n      } else {\r\n        res.json({\r\n          success: true,\r\n          data: data\r\n        });\r\n      }\r\n    })\r\n  },\r\n};\r\n\r\nmodule.exports=authController;"]}